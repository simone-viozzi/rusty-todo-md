// ===============================
// 🐍 Python Comment Parser
// ===============================

// A Python file consists of comments, code, and string literals.
python_file = { SOI ~ (comment | docstring | str_literal | any_non_comment)* ~ EOI }

// ===============================
// 🎯 TODO Comments Extraction
// ===============================

// Single-line `TODO:` comments (# TODO: ...)
todo_comment = @{
    "#" ~ "TODO:" ~ (!NEWLINE ~ ANY)*
}

// Multi-line docstring with `TODO:`
todo_docstring = @{
    ("\"\"\"" | "'''") ~ "TODO:" ~ (!("\"\"\"" | "'''") ~ ANY)* ~ ("\"\"\"" | "'''")
}

// ===============================
// 📌 Regular Comments
// ===============================

// Regular single-line comments (`# ...`)
line_comment = @{
    "#" ~ (!NEWLINE ~ ANY)*
}

// General comment rule (captures all comments)
comment = { todo_comment | line_comment }

// ===============================
// 📜 Docstrings
// ===============================

// Triple-quoted string (`""" ... """` or `''' ... '''` used as docstrings)
docstring = @{
    ("\"\"\"" | "'''") ~ (!("\"\"\"" | "'''") ~ ANY)* ~ ("\"\"\"" | "'''")
}

// ===============================
// 🚫 Ignoring String Literals
// ===============================

// Avoid capturing TODOs inside regular string literals
str_literal = _{
    "\"" ~ (!"\"" ~ ANY)* ~ "\"" |
    "'" ~ (!"'" ~ ANY)* ~ "'"
}

// ===============================
// ❌ Any Other Non-Comment Code
// ===============================

// Anything that is NOT a comment, docstring, or string
any_non_comment = { !(comment | docstring | str_literal) ~ ANY }
