// We assume the "grammar-extras" feature is on, so we can define COMMENT or WHITESPACE if we want.
//
// For Python, we capture:
// 1. Single-line `#` comments
// 2. Triple-quoted docstrings (multi-line comments)
// 3. Explicit `TODO:` comments separately to make extraction easier

python_file = { SOI ~ (todo_comment | comment_python | str_literal | ANY)* ~ EOI }

// ===============================
// COMMENT EXTRACTION RULES
// ===============================

// General comments: Includes single-line and docstring comments
comment_python = { line_comment | docstring_comment }

// Single-line comments: Captures `#` comments and ignores regular code
line_comment = @{ "#" ~ (!NEWLINE ~ ANY)* }

// Triple-quoted docstrings (multi-line comments)
docstring_comment = @{ "\"\"\"" ~ (!"\"\"\"" ~ ANY)* ~ "\"\"\"" }

// ===============================
// TODO COMMENT EXTRACTION
// ===============================

// Captures `TODO:` comments (single-line or inside docstrings)
todo_comment = @{
    "#" ~ "TODO:" ~ (!NEWLINE ~ ANY)* |
    "\"\"\"" ~ "TODO:" ~ (!"\"\"\"" ~ ANY)* ~ "\"\"\""
}

// ===============================
// STRING LITERALS (For Skipping Code Strings)
// ===============================

// Ignore normal string literals to avoid false positives
str_literal = _{
    "\"" ~ (!"\"" ~ ANY)* ~ "\"" |
    "'" ~ (!"'" ~ ANY)* ~ "'"
}

