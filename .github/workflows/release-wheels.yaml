name: release-wheels

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
          - runner: ubuntu-22.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          before-script-linux: |
            # Debian/Ubuntu runners or custom Ubuntu containers
            if command -v apt-get >/dev/null 2>&1; then
              apt-get -qq update
              apt-get install -y \
                perl libssl-dev pkg-config
            # CentOS-based manylinux images (yum) ─ default path for maturin builds
            elif command -v yum >/dev/null 2>&1; then
              yum install -y \
                perl-core perl-IPC-Cmd openssl-devel pkgconfig
            # Fedora/RHEL 9 manylinux_2_28 images (dnf)
            elif command -v dnf >/dev/null 2>&1; then
              dnf install -y \
                perl-core perl-IPC-Cmd openssl-devel pkgconfig
            else
              echo "No known package manager found; skipping system-deps install"
            fi
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-22.04
            target: x86_64
          - runner: ubuntu-22.04
            target: x86
          - runner: ubuntu-22.04
            target: aarch64
          - runner: ubuntu-22.04
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          before-script-linux: |
            # Debian/Ubuntu runners or custom Ubuntu containers
            if command -v apt-get >/dev/null 2>&1; then
              apt-get -qq update
              apt-get install -y \
                perl libssl-dev pkg-config
            # CentOS-based manylinux images (yum) ─ default path for maturin builds
            elif command -v yum >/dev/null 2>&1; then
              yum install -y \
                perl-core perl-IPC-Cmd openssl-devel pkgconfig
            # Fedora/RHEL 9 manylinux_2_28 images (dnf)
            elif command -v dnf >/dev/null 2>&1; then
              dnf install -y \
                perl-core perl-IPC-Cmd openssl-devel pkgconfig
            else
              echo "No known package manager found; skipping system-deps install"
            fi
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: macos-13
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'wheels-*/*'
      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
