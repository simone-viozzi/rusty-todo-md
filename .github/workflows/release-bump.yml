name: release-bump

on:
  workflow_dispatch:
    inputs:
        bump_level:
            description: 'Version bump level (major, minor, patch, release, rc, beta, alpha)'
            required: true
            default: 'minor'


jobs:
  version_bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Configure Git Identity
        run: |
          git config --global user.email "release-bot@example.com"
          git config --global user.name "Release Bot"

      - name: Set Up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo-release binary
        id: cache-cargo-release
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.HOME }}/.cargo/bin/cargo-release
          # Stable primary key (bump the suffix if you ever need to bust the cache)
          key: cargo-release-${{ runner.os }}-v1
          # Fallback so future key bumps still reuse older archives
          restore-keys: |
            cargo-release-${{ runner.os }}-

      - name: Install Cargo Release
        if: steps.cache-cargo-release.outputs.cache-hit != 'true'
        run: cargo install cargo-release

      - name: Get Next Version
        id: get_version
        run: |
          out=$(cargo release ${{ github.event.inputs.bump_level }} --dry-run --no-confirm --no-publish --no-tag 2>&1)
          echo "Output: $out"
          next_version=$(printf '%s\n' "$out" \
            | grep -Eo -- 'to [0-9]+\.[0-9]+\.[0-9]+.*$' \
            | awk '{print $2}' \
            | tail -n1)
          echo "Next version: $next_version"
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Create Release Branch
        run: |
          git fetch origin main
          BRANCH="release/v${{ env.NEXT_VERSION }}"
          echo "Creating branch $BRANCH"
          git checkout -b "$BRANCH" origin/main
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

      - name: Bump Version
        run: |
          cargo release ${{ github.event.inputs.bump_level }} --execute --no-confirm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_TOKEN }}
      
      - name: Create PR
        run: |
          gh pr create --base main \
            --head release/${{ env.NEXT_VERSION }} --title "Release ${{ env.NEXT_VERSION }}" --body "This PR releases version ${{ env.NEXT_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge PR
        run: |
          gh pr merge --delete-branch --auto --body "Merged release ${{ env.NEXT_VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.NEXT_VERSION }}
          name: Release ${{ env.NEXT_VERSION }}
          body: Automated release generated by GitHub Actions.
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}